All Users: {
  Graphql query: 
    users {
        id
        email
        name
      }
    }


  Result:
    {
      "data": {
        "users": [
          {
            "id": "1",
            "email": "graphql@test.com",
            "name": "Carolyn Powlowski"
          },
          {
            "id": "2",
            "email": "kheaney@yahoo.com",
            "name": "Elouise Raynor"
          },
          {
            "id": "3",
            "email": "orlando.sipes@yahoo.com",
            "name": "Mrs. Dejah Wiza"
          },
          ...
        ]
      }
    }

---------------------------------:;

Find one user:
  Graphql query: 
    {
      user(id:1) {
        email
        name
      }
    }
  Result:
    {
      "data": {
        "user": {
          "email": "graphql@test.com",
          "name": "Carolyn Powlowski"
        }
      }
    }

----------------------------------:;
All Users with pagination :
  Graphql query: 
  {
    users(first:5) {
      data {
        id
        name
      }
      paginatorInfo {
        currentPage
        lastPage
      }
    }
  }
  Result:
    {
      "data": {
        "users": {
          "data": [
            {
              "id": "1",
              "name": "Salvatore Reichert I"
            },
            {
              "id": "2",
              "name": "Hector Kunde"
            },
            {
              "id": "3",
              "name": "Buford Feest"
            },
            {
              "id": "4",
              "name": "Alvera Mertz MD"
            },
            {
              "id": "5",
              "name": "Hazle Hand"
            }
          ],
          "paginatorInfo": {
            "currentPage": 1,
            "lastPage": 3
          }
        }
      }
    }

------------------------------------
Relations:
  query:
    {
      user(id:1) {
        articles {
          id
          title
        }
      }
    }
  Result:
    {
      "data": {
        "user": {
          "articles": [
            {
              "id": "1",
              "title": "Sit odit non sint ab quae autem voluptatem."
            },
            {
              "id": "2",
              "title": "Doloremque vero ullam laboriosam autem in."
            },
            {
              "id": "3",
              "title": "Nesciunt eos et delectus aut nostrum."
            },
            {
              "id": "4",
              "title": "Mollitia sit tempora architecto autem."
            },
            {
              "id": "5",
              "title": "Facere quae facere fuga labore quis quia."
            }
          ]
        }
      }
    }

----------------------------------------
Relation Inverse:
  Query:
    {
      articles(first:2) {
        paginatorInfo {
          total
          hasMorePages
        }
        data {
          id
          title
          author {
            name
            email
          }
        }
      }
    }

  Result:
    {
      "data": {
        "articles": {
          "paginatorInfo": {
            "total": 55,
            "hasMorePages": true
          },
          "data": [
            {
              "id": "1",
              "title": "Sit odit non sint ab quae autem voluptatem.",
              "author": {
                "name": "Salvatore Reichert I",
                "email": "admin@admin.com"
              }
            },
            {
              "id": "2",
              "title": "Doloremque vero ullam laboriosam autem in.",
              "author": {
                "name": "Salvatore Reichert I",
                "email": "admin@admin.com"
              }
            }
          ]
        }
      }
    }

-------------------------------------------
Creaete new user:
  Query:
    mutation {
      createUser(
        name:"John Doe"
        email:"john.doe@example.com"
        password:"secret"
      ) {
        id
        name
        email
      }
    }
  Result:
    {
      "data": {
        "createUser": {
          "id": "12",
          "name": "John Doe",
          "email": "john.doe@example.com"
        }
      }
    }

------------------------------------------------
Login:
  Cretae new mutation:
    php artisan lighthouse:mutation AuthMutator

  Query:
    mutation {
      login(email:"graphql@test.com", password:"secret")
    }
  Result:
    {
      "data": {
        "login": "VJCz1DCpmdvB9WatqvWbXBP2RN8geZQlrQatUnWIBJCdbAyTl3UsdOuio3VE"
      }
    }

Guard APi Auth:
  Query:
    {
      me {
        email
        articles {
          id
          title
        }
      }
    }

  Header: bearer Token

  Result:
    {
      "data": {
        "me": {
          "email": "admin@admin.com",
          "articles": [
            {
              "id": "1",
              "title": "Aspernatur placeat numquam dolorem laboriosam molestiae."
            },
            {
              "id": "2",
              "title": "Aut voluptatem rerum est nemo cum ullam vitae et."
            },
            {
              "id": "3",
              "title": "Odio et minima quod quia vel enim cupiditate."
            },
            {
              "id": "4",
              "title": "Quaerat dolor libero earum recusandae laudantium rem."
            },
            {
              "id": "5",
              "title": "Cupiditate voluptatem maxime dolor velit."
            }
          ]
        }
      }
    }
  Config-> auth-> guards->
        "api" => [
            "driver" => "token",
            "provider" => "users",
            "hash" => false
        ]

-------------------------
Middleware:
  Query:    
    mutation {
      createArticle(
        title:"Building a GraphQL Server with Laravel"
        content:"In case you're not currently familiar with it, GraphQL is a query language used to interact with your API..."
      ) {
        id
        author {
          id
          email
        }
      }
    }

  Result:
    {
      "data": {
        "createArticle": {
          "id": "56",
          "author": {
            "id": "1",
            "email": "admin@admin.com"
          }
        }
      }
    }